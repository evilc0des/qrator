import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import QrScanner from 'qr-scanner';
import { useEffect, useMemo, useRef, useState } from 'react';
import { Dialog } from '@headlessui/react';

type QrCodeResult = {
  data: string,
}
type BookingData = {
  id?: string,
  time?: string
}

const Tickets: NextPage = () => {

  const [tickets, setTickets] = useState([]);
  const [newTicket, setNewTicket] = useState({})

  useEffect(() => {
    fetch(`/api/ticket`, {
      method: 'GET',
    })
      .then(response => response.json())
      .then(data => {
        console.log(data);
        setTickets(data);
      });
  }, [])

  const handleNewBookingChange = (label, value) => {
    setNewTicket({
      ...newTicket,
      [label]: value
    });
  }

  const handleSubmit = () => {
    if(newTicket.bookingId && newTicket.seats) {
      fetch(`/api/ticket/${newTicket.bookingId}`, {
        method: 'PUT',
        body: JSON.stringify({
          bookingId: newTicket.bookingId,
          seats: newTicket.seats.split(",").map(e => e.trim()),
          time: newTicket.time
        })
      })
        .then(response => response.json())
        .then(data => {
          console.log(data);
          setTickets([...tickets, data]);
        });
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>QRator: Tickets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <table>
          <tr>
            <th className="border-r min-w-[20vw]">Booking Id</th>
            <th className="border-r min-w-[20vw]">Seats</th>
            <th className="border-r min-w-[20vw]">Time</th>
            <th className="border-r min-w-[20vw]">Admitted</th>
          </tr>
          {tickets.map(t => <tr key={t._id}>
            <td className="border-r text-center">{t.bookingId}</td>
            <td className="border-r text-center">{t.seats.join(", ")}</td>
            <td className="border-r text-center">{t.time}</td>
            <td className="border-r text-center">{t.admitted}</td>
          </tr>
          )}
        </table>

        <form className="mt-8 flex flex-col items-start p-4" onSubmit={handleSubmit}>
          <label>
            BookingId:
            <input  className="border ml-4" type="text" value={newTicket.bookingId} onChange={(value) => handleNewBookingChange("bookingId", value)} />
          </label>
          <label>
            Seats:
            <input className="border ml-4" type="text" value={newTicket.seats} onChange={(value) => handleNewBookingChange("seats", value)} />
          </label>
          <label>
            Time:
            <input className="border ml-4" type="text" value={newTicket.time} onChange={(value) => handleNewBookingChange("time", value)} />
          </label>
          <input className="bg-blue-400 p-2 mt-4" type="submit" value="Submit" />
        </form>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            Appato
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Tickets
